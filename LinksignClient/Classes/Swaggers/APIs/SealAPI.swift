//
// SealAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class SealAPI: APIBase {
    /**
     
     \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
     
     - parameter clientId: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createSeal(clientId clientId: String, body: Seal?, completion: ((data: SealSummary?, error: ErrorType?) -> Void)) {
        createSealWithRequestBuilder(clientId: clientId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
     
     - POST /clients/{clientId}/seals
     - \u521B\u5EFA\u4E00\u4E2A\u5370\u7AE0
     - examples: [{example={
  "sealFileUri" : "aeiou",
  "sealerRedirectUri" : "aeiou",
  "sealId" : "aeiou"
}, contentType=application/json}]
     
     - parameter clientId: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<SealSummary> 
     */
    public class func createSealWithRequestBuilder(clientId clientId: String, body: Seal?) -> RequestBuilder<SealSummary> {
        var path = "/clients/{clientId}/seals"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body?.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<SealSummary>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
     
     - parameter clientId: (path) \u7CFB\u7EDF\u7F16\u53F7 
     - parameter sealId: (path) \u5370\u7AE0\u7F16\u53F7 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getSeal(clientId clientId: String, sealId: String, completion: ((data: SealFile?, error: ErrorType?) -> Void)) {
        getSealWithRequestBuilder(clientId: clientId, sealId: sealId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
     
     - GET /clients/{clientId}/seals/{sealId}
     - \u83B7\u53D6\u4E00\u4E2A\u5370\u7AE0
     - examples: [{example={
  "imagePngBase64" : "aeiou"
}, contentType=application/json}]
     
     - parameter clientId: (path) \u7CFB\u7EDF\u7F16\u53F7 
     - parameter sealId: (path) \u5370\u7AE0\u7F16\u53F7 

     - returns: RequestBuilder<SealFile> 
     */
    public class func getSealWithRequestBuilder(clientId clientId: String, sealId: String) -> RequestBuilder<SealFile> {
        var path = "/clients/{clientId}/seals/{sealId}"
        path = path.stringByReplacingOccurrencesOfString("{clientId}", withString: "\(clientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{sealId}", withString: "\(sealId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<SealFile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
